# The Ambire relayer for all EVM chains. Responsible for managing on-chain
# Identities (called "Ambire accounts") and relaying gasless transactions
# to the Ethereum network. It is not intended to be blockchain-agnostic,
# and it is Ethereum-specific.
# 游릭 REQUIRED FOR PRODUCTION
RELAYER_URL="https://relayer.ambire.com"

# Alternative to Zapper, developed by Ambire. Serves the same purpose.
# 游릭 REQUIRED FOR PRODUCTION
VELCRO_URL="https://relayer.ambire.com/velcro-v3"

# This value can be used to control the unique ID of an extension, when it is
# loaded during development. In prod, the ID is generated in Chrome Web Store
# and can't be changed (could be retrieved from Chrome Web Store).
# In DEV, it is generated based on a key.pem using the following method:
# {@link https://stackoverflow.com/a/46739698/1333836}
# 游릭 REQUIRED FOR PRODUCTION
BROWSER_EXTENSION_PUBLIC_KEY=""

# The bundler api key for ERC-4337 broadcasts
# 游릭 REQUIRED FOR PRODUCTION
REACT_APP_PIMLICO_API_KEY=""

# Block explorer for user operations. We use it's API to fetch the
# txnId for the userOpHashes in benzina and activity.ts
# 游릭 REQUIRED FOR PRODUCTION
REACT_APP_JIFFYSCAN_API_KEY=""

# URL for nft image resolver
# 游릭 REQUIRED FOR PRODUCTION
NFT_CDN_URL="https://nftcdn.ambire.com"

# The address of the Legends NFT contract (same on PROD and STAGING)
# 游릭 REQUIRED FOR PRODUCTION
LEGENDS_NFT_ADDRESS=""

# LiFi API is a service that allows developers to easily transfer
# liquidity across chains, access aggregated liquidity and information from
# multiple decentralized exchange networks and bridges across various blockchains.
# Access to the API is NOT restricted, but it's rate-limited without a key.
LI_FI_API_KEY=""

# Socket API is part of the Bungee API. It allows developers to easily transfer
# liquidity across chains, access aggregated liquidity and information from
# hundreds of on-chain and off-chain decentralized exchange networks, bridges,
# across multiple blockchains. Access is restricted and requires an API key.
SOCKET_API_KEY=""

# Auto-Fill Keystore Password during development
DEFAULT_KEYSTORE_PASSWORD_DEV=""

# Possible log level descriptors, may be string, lower or upper case, or number.
# There are 6 levels: 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent'.
# This disables all logging below the given level, so that after a
# log.setLevel("warn") call log.warn("something") or log.error("something")
# will output messages, but log.info("something") will not.
BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD="warn"
BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV="trace"

# This value can be used to control the state of the controller logs.
# If set to "true", the logs will be displayed only for the controller which is updated.
# Due to the high volume of logs causing memory leak on FF, it is recommended to use this only for debugging purposes.
BROWSER_EXTENSION_LOG_UPDATED_CONTROLLER_STATE_ONLY="false"

# End-to-end tests configuration.
# To run the tests locally, you can get the variable values from GitHub secrets.
# Some of the variables are private, so please ping a team member, most likely @Krum, @Jordan, or @Kalo.
#
# To enable controller state logs while running E2E tests locally or in the CI, set E2E_DEBUG="true".
E2E_DEBUG=""
IS_TESTING=""
DISPLAY=""
KEYSTORE_PASS=""
BA_PRIVATE_KEY=""
BA_PASSPHRASE=""
BA_ACCOUNT_PREFERENCES=""
BA_ACCOUNTS=""
BA_KEYSTORE_UID=""
BA_KEYS=""
BA_SECRETS=""
BA_SEEDS=""
BA_NETWORK_WITH_ASSETS=""
BA_NETWORK_WITH_POSITIONS=""
BA_ONBOARDING_STATE=""
BA_PREVIOUSHINTS=""
BA_SELECTED_ACCOUNT=""
BA_TERMSTATE=""
SA_ACCOUNT_PREFERENCES=""
SA_ACCOUNTS=""
SA_IS_ONBOARDED=""
SA_KEYSTORE_UID=""
SA_KEYS=""
SA_SECRETS=""
SA_SEEDS=""
SA_ONBOARDING_STATE=""
SA_PREVIOUSHINTS=""
SA_SELECTED_ACCOUNT=""
SA_TERMSTATE=""
SA_NETWORK_WITH_ASSETS=""
SA_NETWORK_WITH_POSITIONS=""
SA_PASSPHRASE=""
