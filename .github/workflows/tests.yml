name: Browser Extension

on:
  push:
    branches:
      - v2
  pull_request:
    branches:
      - v2

jobs:
  unit_tests:
    name: Unit Tests (Disabled)
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Unit Tests Disabled
        run: echo "Unit tests are currently disabled. Please update tests.yml to enable them when unit tests are available."
      # - name: Checkout code üõéÔ∏è
      #   uses: actions/checkout@v3

      # - name: Add SSH key to checkout a private repo
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # - name: Setup Environment
      #   uses: ./.github/composite-actions/setup

      # - name: Run Unit Tests
      #   run: yarn test
  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    environment: testing
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout code üõéÔ∏è
        uses: actions/checkout@v3

      - name: Add SSH key to checkout a private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup Environment
        uses: ./.github/composite-actions/setup

      - name: Cache Chrome
        id: cache-chrome
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/puppeteer
          key: ${{ runner.os }}-chrome

      - name: Install Chrome
        if: steps.cache-chrome.outputs.cache-hit != 'true'
        run: node node_modules/puppeteer/install.js
        shell: bash

      # Set up Docker
      - name: Set up Docker
        run: sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose -y

      - name: Start trezor-emulator container
        run: docker pull ghcr.io/trezor/trezor-user-env && docker-compose -f ./docker-compose-mac.yml up --force-recreate -d

        # The next step is required to run Puppeteer in headful mode in GitHub Actions.
        # We attempted to configure it in a headless manner,
        # but it fails right from the start when we attempt to locate the current page of the extension.
      - name: Configure the display server
        run: Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &

      - name: Puppeteer Tests üßë‚Äçüî¨
        env:
          IS_TESTING: 'true'
          E2E_DEBUG: ${{ vars.E2E_DEBUG }}
          # Its value is based on the above Display server configuration
          DISPLAY: ':99.0'
          RELAYER_URL: ${{ vars.RELAYER_URL }}
          VELCRO_URL: ${{ vars.VELCRO_URL }}
          SOCKET_API_KEY: ${{ vars.SOCKET_API_KEY }}
          LI_FI_API_KEY: ${{ vars.LI_FI_API_KEY }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          SEED: ${{ secrets.SEED }}
          BA_PRIVATE_KEY: ${{ secrets.BA_PRIVATE_KEY }}
          BA_PASSPHRASE: ${{ secrets.BA_PASSPHRASE }}
          BA_ACCOUNTS: ${{ vars.BA_ACCOUNTS }}
          BA_KEYSTORE_UID: ${{ vars.BA_KEYSTORE_UID }}
          BA_KEYS: ${{ vars.BA_KEYS }}
          BA_SECRETS: ${{ secrets.BA_SECRETS }}
          BA_SEEDS: ${{ vars.BA_SEEDS }}
          BA_NETWORK_WITH_ASSETS: ${{ vars.BA_NETWORK_WITH_ASSETS }}
          BA_NETWORK_WITH_POSITIONS: ${{ vars.BA_NETWORK_WITH_POSITIONS }}
          BA_ONBOARDING_STATE: ${{ vars.BA_ONBOARDING_STATE }}
          BA_PREVIOUSHINTS: ${{ vars.BA_PREVIOUSHINTS }}
          BA_SELECTED_ACCOUNT: ${{ vars.BA_SELECTED_ACCOUNT }}
          BA_TERMSTATE: ${{ vars.BA_TERMSTATE }}
          SA_ACCOUNTS: ${{ vars.SA_ACCOUNTS }}
          SA_IS_ONBOARDED: ${{ vars.SA_IS_ONBOARDED }}
          SA_KEYSTORE_UID: ${{ vars.SA_KEYSTORE_UID }}
          SA_KEYS: ${{ vars.SA_KEYS }}
          SA_SECRETS: ${{ secrets.SA_SECRETS }}
          SA_SEEDS: ${{ vars.SA_SEEDS }}
          SA_ONBOARDING_STATE: ${{ vars.SA_ONBOARDING_STATE }}
          SA_PREVIOUSHINTS: ${{ vars.SA_PREVIOUSHINTS }}
          SA_SELECTED_ACCOUNT: ${{ vars.SA_SELECTED_ACCOUNT }}
          SA_TERMSTATE: ${{ vars.SA_TERMSTATE }}
          SA_NETWORK_WITH_ASSETS: ${{ vars.SA_NETWORK_WITH_ASSETS }}
          SA_NETWORK_WITH_POSITIONS: ${{ vars.SA_NETWORK_WITH_POSITIONS }}
          SA_PASSPHRASE: ${{ secrets.SA_PASSPHRASE }}
          SEED_24_WORDS: ${{ secrets.SEED_24_WORDS }}
          SHOULD_RUN_TREZOR_TESTS: 'true'

        run: yarn run test:e2e:web

        # Upload the recorded test videos (in case of failure) as Artifact
      - name: Artifacts - Recordings
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: puppeteer-recordings
          path: recorder
